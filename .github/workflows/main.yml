name: React build

on:
  push:
    branches:
      - main # main 브랜치에서 push 이벤트가 일어났을 때 실행

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Cache node modules # node modules 캐싱
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-deploy-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Generate Environment Variables File for Production
        run: |
          echo "REACT_APP_KAKAO_API_KEY=$REACT_APP_KAKAO_API_KEY" >> .env.production
          echo "REACT_APP_KAKAO_CALLBACK_URL=$REACT_APP_KAKAO_CALLBACK_URL" >> .env.production
          echo "REACT_APP_GOOGLE_API_KEY=$REACT_APP_GOOGLE_API_KEY" >> .env.production
          echo "REACT_APP_GOOGLE_CALLBACK_URL=$REACT_APP_GOOGLE_CALLBACK_URL" >> .env.production
          echo "REACT_APP_NAVER_API_KEY=$REACT_APP_NAVER_API_KEY" >> .env.production
          echo "REACT_APP_NAVER_CALLBACK_URL=$REACT_APP_NAVER_CALLBACK_URL" >> .env.production
          echo "REACT_APP_SENTRY_DSN=$REACT_APP_SENTRY_DSN" >> .env.production
        env:
          REACT_APP_KAKAO_API_KEY: ${{ secrets.REACT_APP_KAKAO_API_KEY }}
          REACT_APP_KAKAO_CALLBACK_URL: ${{ secrets.REACT_APP_KAKAO_CALLBACK_URL }}
          REACT_APP_GOOGLE_API_KEY: ${{ secrets.REACT_APP_GOOGLE_API_KEY }}
          REACT_APP_GOOGLE_CALLBACK_URL: ${{ secrets.REACT_APP_GOOGLE_CALLBACK_URL }}
          REACT_APP_NAVER_API_KEY: ${{ secrets.REACT_APP_NAVER_API_KEY }}
          REACT_APP_NAVER_CALLBACK_URL: ${{ secrets.REACT_APP_NAVER_CALLBACK_URL }}
          REACT_APP_SENTRY_DSN: ${{ secrets.REACT_APP_SENTRY_DSN }}

      - name: Install Dependencies
        run: yarn

      - name: Build
        run: unset CI && yarn build

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
        run: |
          aws s3 cp \
          --recursive \
          --region ap-northeast-2 \
          build '${{ secrets.S3_BUCKET_NAME }}'
      - name: Invalidate Cloudfront Cache
        env:
          AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
        run: aws cloudfront create-invalidation --distribution-id '${{ secrets.DISTRIBUTION_ID }}' --paths "/*"
